<?xml version="1.0" ?>
<launch>

  <arg name="multiplexer_name"		default="camera_multiplexer"/>
  <arg name="camera_names"		default="a_bot_camera b_bot_camera"/>
  <arg name="active_camera_name"	default="b_bot_camera"/>
  <arg name="config_dir"		default="$(dirname)/../config"/>
  <arg name="manager"			default=""/>
  <arg name="camera_no"			default="0"/>
  <arg name="sim"			default="false"/>
  <arg name="vis"			default="false"/>

  <group unless="$(eval camera_no == len(camera_names.split()))">
    <!-- Get camera name and its serial number -->
    <arg name="camera_name"
	 value="$(eval camera_names.split()[camera_no])"/>

    <!-- Launch camera_no-th camera -->
    <include unless="$(arg sim)"
	     file="$(find realsense2_camera
		   )/launch/rs_camera_with_config.launch">
      <arg name="camera"		value="$(arg camera_name)"/>
      <arg name="config_file"		value="$(arg config_dir
					       )/$(arg camera_name).yaml"/>
      <arg name="external_manager"	value="$(eval manager != '')"/>
      <arg name="manager"		value="/$(arg manager)"
	   if="$(eval manager != '')"/>
    </include>

    <!-- Connect camera outputs to the multiplexer -->
    <remap from="/$(arg multiplexer_name)/$(arg camera_name)/camera_info"
    	   to="$(arg camera_name)/color/camera_info"/>
    <remap from="/$(arg multiplexer_name)/$(arg camera_name)/image"
    	   to="$(arg camera_name)/color/image_raw"/>
    <remap from="$(arg multiplexer_name)/$(arg camera_name)/depth"
    	   to="$(arg camera_name)/aligned_depth_to_color/image_raw"/>
    <remap from="$(arg multiplexer_name)/$(arg camera_name)/pointcloud"
    	   to="$(arg camera_name)/depth/points"/>

    <!-- Recursively call myself for launching remaining cameras -->
    <include file="$(dirname)/realsense.launch">
      <arg name="multiplexer_name"	value="$(arg multiplexer_name)"/>
      <arg name="camera_names"		value="$(arg camera_names)"/>
      <arg name="active_camera_name"	value="$(arg active_camera_name)"/>
      <arg name="config_dir"		value="$(arg config_dir)"/>
      <arg name="manager"		value="$(arg manager)"/>
      <arg name="camera_no"		value="$(eval camera_no + 1)"/>
      <arg name="sim"			value="$(arg sim)"/>
      <arg name="vis"			value="$(arg vis)"/>
    </include>
  </group>

  <!-- Launch the multiplexer after all cameras have been launched -->
  <group if ="$(eval camera_no == len(camera_names.split()))">
    <arg if    ="$(eval manager == '')"	name="command"	value="standalone"/>
    <arg unless="$(eval manager == '')"	name="command"	value="load"/>

    <!-- Launch multiplexer -->
    <arg name="camera_name_list"
	 value="$(eval ','.join(camera_names.split()))"/>
    <node name="$(arg multiplexer_name)"
	  pkg="nodelet" type="nodelet" output="screen"
  	  args="$(arg command) aist_camera_multiplexer/aist_camera_multiplexer
		$(arg manager)">
      <rosparam param="camera_names"
		subst_value="true">[$(arg camera_name_list)]</rosparam>
    </node>

    <!-- Turn on laser only for the specified camera -->
    <node unless="$(arg sim)"
	  name="select_realsense_camera"
	  pkg="aist_camera_multiplexer" type="select_realsense_camera.py"
	  args="$(arg active_camera_name)"/>

    <!-- Launch RViz if required -->
    <group if="$(arg vis)">
      <node name="$(anon rviz)" pkg="rviz" type="rviz"
  	    args="-d $(dirname)/test.rviz" respawn="false" output="screen"/>
      <node name="rqt_reconfigure"
	    pkg="rqt_reconfigure" type="rqt_reconfigure"/>
    </group>
  </group>

</launch>
