#
# - A new collision object with 'object_id' of 'object_type' will be created.
#
uint8 CREATE_OBJECT=1
#
# - Delete the collision object with 'object_id'.
# - If 'object_id' is empty, all collision objects attached to 'target_link'
#   will be deleted.
# - If 'target_link' is also empty, all collision objects in the scene
#   will be deleted.
#
uint8 REMOVE_OBJECT=2
#
# - Attach the existing collision object with 'object_id' to the 'target_link'
#   at the 'pose'. Current target link before attaching the new one
#   is returned in 'retval'.
# - If 'preserve_ascendats' is true, keep ascendants of the object as
#   descendants instead of detaching them.
uint8 ATTACH_OBJECT=3
#
# - Detach the existing collision object with 'object_id' from the target link
#   currently attached to.
#
uint8 DETACH_OBJECT=4
#
# - Append 'touch_links' to the existing touch links of the object
#   with 'object_id'.
#
uint8 APPEND_TOUCH_LINKS=5
#
# - Remove 'touch_links' from the existing touch links of the object
#   with 'object_id'.
#
uint8 REMOVE_TOUCH_LINKS=6
#
# - Return the object type of the existing collision object with 'object_id'
#   in 'retval'.
#
uint8 GET_OBJECT_TYPE=7
#
# - Return parent of the existing collision object with 'object_id'
#   in 'retval'.
#
uint8 GET_OBJECT_PARENT=8

uint8              op
string             object_type
string             object_id
string             frame_id
string             subframe
geometry_msgs/Pose pose
string[]           touch_links
---
bool               success
string             retval